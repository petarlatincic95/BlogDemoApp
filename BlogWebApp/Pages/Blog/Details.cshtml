@page "/blog/{urlHandle}"
@model BlogWebApp.Pages.Blog.DetailsModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager


@if (@Model.BlogPost != null)
{
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-6">

                @if (@Model.BlogPost != null)
                {
                    ViewData["Title"] = @Model.BlogPost.PageTitle;
                    <h1 class="mb-3">@Model.BlogPost.Heading</h1>

                    <div class="d-flex justify-content-between mb-3">
                        <span class="text-secondary">@Model.BlogPost.Author</span>
                        <span class="text-secondary">@Model.BlogPost.PublishedDate.ToShortDateString()</span>
                    </div>

                    <div class="mb-3">
                        <span>
                            @if (signInManager.IsSignedIn(User))
                            {
                                @if (Model.isLiked)
                                {

                                    <a style="cursor: pointer">
                                        <i class="bi bi-hand-thumbs-up-fill"></i>
                                    </a>
                                }
                                else
                                {
                                    <a id="btnLike" style="cursor: pointer">
                                        <i class="bi bi-hand-thumbs-up"></i>
                                    </a>
                                }
                            }


                            <span id="totalLikes">@Model.BlogPostTotalLikes likes</span>
                        </span>
                    </div>


                    if (Model.BlogPost.Tags != null)
                    {
                        foreach (var tag in Model.BlogPost.Tags)
                        {
                            <a href="/tags/@tag.Name">
                                <span class="badge bg-dark">@tag.Name</span>
                            </a>

                        }


                    }

                    <img src="@Model.BlogPost.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                    <div class="mb-3 blog-details">
                        @Html.Raw(@Model.BlogPost.Content)
                    </div>

                    <div class="card">

                        <div class="card-header">
                            <h5>Comments</h5>
                            @if (signInManager.IsSignedIn(User))
                            {
                                <form method="post">
                                    <div class="mb-3">
                                        <label class="form-label">Comment Description</label>
                                        <input type="text" class="form-control" asp-for="@Model.CommentDesciption">
                                        <span class="text-danger" asp-validation-for="@Model.CommentDesciption"></span>
                                    </div>
                                    <div class="mb-3">
                                        <button type="submit" class="btn-primary btn-dark">Add Comment</button>
                                        <input type="hidden" asp-for="BlogPostId" />
                                    </div>
                                </form>

                            }

                        </div>
                        <div class="card-body">
                            @if (@Model.Comments != null && @Model.Comments.Any())
                            {
                                @foreach (var comment in @Model.Comments)
                                {
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <div>
                                                @comment.Description
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span class="text-secondary">@comment.UserName</span>
                                                <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                            </div>
                                        </div>
                                    </div>
                                }


                            }
                            else
                            {
                                <p>There is no Comments</p>
                            }

                        </div>
                    </div>

                }
                else
                {
                    <h2>Blog post not found!</h2>
                }
            </div>
        </div>
    </div>
    @section Scripts{

<script>
    const btnLike=document.getElementById('btnLike');
    const totalLikesElement=document.getElementById('totalLikes');
    async function getTotalLikes()
    {
        fetch('/api/blogpostlike/@Model.BlogPost.Id/totallikes',{
            method:'GET',
                headers:
                {
                    'Content-Type':'application/json',
                    'Accept':'*/*'
                }

        }).then(data=>data.json())
        .then(result=>totalLikesElement.innerHTML=result);


    }
    async function addLikeForBlogPost()
        {
                fetch('/api/blogpostlike/add',{
                method:'POST',
                headers:
                {
                    'Content-Type':'application/json',
                    'Accept':'*/*'
                },
                body: JSON.stringify({blogPostId:'@Model.BlogPost.Id',userId:'@userManager.GetUserId(User)'})
            })
            .then(()=>{
                btnLike.innerHTML='<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLike.removeEventListener('click',addLikeForBlogPost);
                getTotalLikes();

            })
        }
        btnLike.addEventListener('click', addLikeForBlogPost);
</script>
}


}
else
{
    <div class="container mt-3">
        <h2>Blog post not found!</h2>
    </div>
    
}


